name: Hexo-Build-Deploy

# 只监听 master 分支的改动
on:
  push:
    branches:
      - master      # change this to the name of your branch

# 自定义环境变量
env:
  TZ: Asia/Shanghai

jobs:
  deploy:
    runs-on: ubuntu-latest  # specifies the operating system to run the job on

    steps:
      # Checkout the repository code including submodules
      - name: Checkout Code 🛎️
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'   # Fetch Hugo themes (true OR recursive)

      # Use Node.js 16.x
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      # # - name: Checkout theme repo
      # #   uses: actions/checkout@v2
      # #   with:
      # #     repository: git@github.com:theme-next/hexo-theme-next.git
      # #     ref: master
      # #     path: themes/next
      # # 同步子模块。如果没有使用子模块的话，这一步可以忽略。
      # - name: Checkout submodules
      #   run: |
      #     auth_header="$(git config --local --get http.https://github.com/.extraheader)"
      #     git submodule sync --recursive
      #     git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1    



      # # 设置 yarn 缓存，npm 的话可以看 actions/cache@v2 的文档示例
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

    # Cache npm modules
    # To speed up the workflow by reusing the cached modules instead of reinstalling them every time.
      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install Dependencies
        run: npm install
      
      # Build the site
      - name: Build
        run: npm run build
      
      # Deploy to GitHub Pages using peaceiris/actions-gh-pages
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

# The code you provided is for setting up a private key and using it to deploy the site. However, since you are deploying your Hexo site to GitHub Pages, you don't need to use a private key for authentication. Instead, you can use the GITHUB_TOKEN secret provided by GitHub Actions to authenticate with GitHub.

# Therefore, you don't need to add these lines:

#       # 从之前设置的 secret 获取部署私钥
#       - name: Set up environment
#         env:
#           DEPLOY_KEY: ${{ secrets.DEPLOY_HEXO_PRI }}
#         run: |
#           sudo timedatectl set-timezone "Asia/Shanghai"
#           mkdir -p ~/.ssh
#           echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan github.com >> ~/.ssh/known_hosts

#       # 生成并部署
#       - name: Deploy
#         run: |
#           npx hexo deploy --generate
# Instead, you can use the peaceiris/actions-gh-pages action to deploy your site to GitHub Pages using the GITHUB_TOKEN secret like this: